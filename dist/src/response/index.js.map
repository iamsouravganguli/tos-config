{
  "version": 3,
  "sources": ["../../../src/response/index.ts"],
  "sourcesContent": ["import { NextFunction, Request, Response } from \"express\";\nimport {ResponseProps} from \"../../index\";\n\nexport class ResponseServices {\n  private readonly props: ResponseProps;\n\n  constructor(text?: ResponseProps | null) {\n    this.props = text;\n  }\n\n  public handler = (\n    services: (req: Request, res: Response) => Promise<any>\n  ) => {\n    return async (req: Request, res: Response, next: NextFunction) => {\n      try {\n        await services(req, res);\n      } catch (error) {\n        next(error);\n      }\n    };\n  };\n  public error = (response: Response, error: Error) => {\n    if (error.cause === \"invalid_id\") {\n      return response.status(404).json({ message: `${this.props} not found` });\n    } else {\n      return response.status(500).json({ message: `Error`, error: error });\n    }\n  };\n  public success = (\n    response: Response,\n    type: \"create\" | \"update\" | \"delete\" | \"all\" | \"detail\" | \"other\",\n    data?: any,\n  message?: string\n  ) => {\n    if (type === \"create\") {\n      return response.status(200).json({ message: `${this.props} created` });\n    }\n    if (type === \"update\") {\n      return response.status(200).json({ message: `${this.props} updated` });\n    }\n    if (type === \"delete\") {\n      return response.status(200).json({ message: `${this.props} deleted` });\n    }\n    if (type === \"all\") {\n      return response.status(200).json(data);\n    }\n    if (type === \"detail\") {\n      return response.status(200).json(data);\n    }\n    if (type === \"other\") {\n      return response.status(200).json({ message: message });\n    } else {\n      return response.status(200).json(data);\n    }\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,MAAM,iBAAiB;AAAA,EACX;AAAA,EAEjB,YAAY,MAA6B;AACvC,SAAK,QAAQ;AAAA,EACf;AAAA,EAEO,UAAU,CACf,aACG;AACH,WAAO,OAAO,KAAc,KAAe,SAAuB;AAChE,UAAI;AACF,cAAM,SAAS,KAAK,GAAG;AAAA,MACzB,SAAS,OAAO;AACd,aAAK,KAAK;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA,EACO,QAAQ,CAAC,UAAoB,UAAiB;AACnD,QAAI,MAAM,UAAU,cAAc;AAChC,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,GAAG,KAAK,KAAK,aAAa,CAAC;AAAA,IACzE,OAAO;AACL,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,SAAS,MAAa,CAAC;AAAA,IACrE;AAAA,EACF;AAAA,EACO,UAAU,CACf,UACA,MACA,MACF,YACK;AACH,QAAI,SAAS,UAAU;AACrB,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,GAAG,KAAK,KAAK,WAAW,CAAC;AAAA,IACvE;AACA,QAAI,SAAS,UAAU;AACrB,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,GAAG,KAAK,KAAK,WAAW,CAAC;AAAA,IACvE;AACA,QAAI,SAAS,UAAU;AACrB,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,GAAG,KAAK,KAAK,WAAW,CAAC;AAAA,IACvE;AACA,QAAI,SAAS,OAAO;AAClB,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,IAAI;AAAA,IACvC;AACA,QAAI,SAAS,UAAU;AACrB,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,IAAI;AAAA,IACvC;AACA,QAAI,SAAS,SAAS;AACpB,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,EAAE,QAAiB,CAAC;AAAA,IACvD,OAAO;AACL,aAAO,SAAS,OAAO,GAAG,EAAE,KAAK,IAAI;AAAA,IACvC;AAAA,EACF;AACF;",
  "names": []
}
